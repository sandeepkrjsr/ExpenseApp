{"ast":null,"code":"var _jsxFileName = \"/Users/sandeepkr/Reactjs/01-starting-setup/src/components/Chart/Chart.js\";\nimport ChartBar from './ChartBar';\nimport './Chart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = props => {\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoints.value);\n  const totalMaximum = Math.max(...dataPointValues);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: props.dataPoints.map(dataPoint => {\n      /*#__PURE__*/\n      _jsxDEV(ChartBar, {\n        value: dataPoint.value,\n        maxValue: totalMaximum,\n        label: dataPoint.label\n      }, dataPoint.label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/sandeepkr/Reactjs/01-starting-setup/src/components/Chart/Chart.js"],"names":["ChartBar","Chart","props","dataPointValues","dataPoints","map","dataPoint","value","totalMaximum","Math","max","label"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,YAArB;AAEA,OAAO,aAAP;;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACnB,QAAMC,eAAe,GAAGD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,SAAS,IAAIF,UAAU,CAACG,KAA7C,CAAxB;AACA,QAAMC,YAAY,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGP,eAAZ,CAArB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACKD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,SAAS,IAAI;AAC/B;AAAA,cAAC,QAAD;AAEE,QAAA,KAAK,EAAEA,SAAS,CAACC,KAFnB;AAGE,QAAA,QAAQ,EAAEC,YAHZ;AAIE,QAAA,KAAK,EAAEF,SAAS,CAACK;AAJnB,SACOL,SAAS,CAACK,KADjB;AAAA;AAAA;AAAA;AAAA;AAMH,KAPA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAhBD;;KAAMV,K;AAkBN,eAAeA,KAAf","sourcesContent":["import ChartBar from './ChartBar';\n\nimport './Chart.css'\n\nconst Chart = props => {\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoints.value);\n    const totalMaximum = Math.max(...dataPointValues);\n    \n    return (\n        <div className='chart'>\n            {props.dataPoints.map(dataPoint => {\n                <ChartBar\n                  key={dataPoint.label}\n                  value={dataPoint.value}\n                  maxValue={totalMaximum}\n                  label={dataPoint.label}\n                />;\n            })}\n        </div>\n    );\n}\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}